extensionName = "bitmap"
markdownTemplate = """
# Bitmap Extension for NetLogo

This package contains the NetLogo bitmap extension. It allows you to perform manipulations like scaling, converting to grayscale, and grabbing a single channel on images and import them into the patches or drawing.

{{#include}}BUILDING.md{{/include}}

{{#include}}USING.md{{/include}}

## Primitives

{{#contents}}{{#prims}}
[`{{name}}`](#{{primitive.extensionName}}{{primitive.name}})
{{/prims}}{{/contents}}

{{#allPrimitives}}
{{{.}}}
{{/allPrimitives}}

{{#include}}LICENSE.md{{/include}}
"""
primTemplate = """
### `{{name}}`

```NetLogo
{{#examples}}
{{primitive.fullName}}{{#args}} {{name}}{{/args}}
{{/examples}}
```

{{{description}}}
"""
filesToIncludeInManual = [ "USING.md", "primitives" ]
primitives: [
  {
    name: average-color
    type: reporter,
    returns: list,
    arguments: [ { name: image, type: bitmap } ],
    description: """
Reports a 3-element list describing the amount of R, G, and B in
*image*, by summing across all pixels, and normalizing each
component by the number of pixels in the image, so each component
ranges from 0 to 255.
"""
  },
  {
    name: channel,
    type: reporter,
    returns: bitmap,
    arguments: [ { name: image, type: bitmap }, { name: channel, type: number } ],
    description: """
Extracts either the alpha, red, green, or blue channel from an image.
The input *channel* should be an integer 0-3 indicating the
channel to remove (alpha=0, red=1, green=2, blue=3). The resulting
image is a grayscale image representing specified channel.
"""
  },
  {
    name: copy-to-drawing,
    type: command,
    arguments: [ { name: image, type: bitmap }, { name: x, type: number }, { name: y, type: number } ],
    description: """
Imports the given image into the drawing without scaling the image at
the given pixel coordinates.
"""
  },
  {
    name: copy-to-pcolors,
    type: command,
    arguments: [ { name: image, type: bitmap }, { name: boolean, type: boolean } ],
    description: """
Imports the given image into the pcolors, scaled to fit the world.
The second input indicates whether the colors should be interpreted
as NetLogo colors or left as RGB colors. <code>false</code> means RGB
colors.
"""
  },
  {
    name: difference-rgb,
    type: reporter,
    returns: bitmap,
    arguments: [ { name: image1, type: bitmap }, { name: image2, type: bitmap } ],
    description: """
Reports an image that is the absolute value of the pixel-wise RGB
difference between two images. Note that image1 and image2 MUST be
the same width and height as each other, or errors will ensue.
"""
  },
  {
    name: export,
    type: command,
    arguments: [ { name: image, type: bitmap }, { name: filename, type: string } ],
    description: "Writes *image* to *filename*.",
  },
  {
    name: from-view,
    type: reporter,
    returns: bitmap,
    description: "Reports an image of the current view."
  },
  {
    name: to-grayscale,
    type: reporter,
    returns: bitmap,
    arguments: [ { name: image, type: bitmap } ],
    description: "Converts the given image to grayscale."
  },
  {
    name: height,
    type: reporter,
    returns: number,
    arguments: [ { name: image, type: bitmap } ],
    description: "Reports the height of given *image*"
  },
  {
    name: import,
    type: reporter,
    returns: bitmap,
    arguments: [ { name: filename, type: string } ],
    description: "Reports a LogoBitmap containing the image at *filename*."
  },
  {
    name: scaled,
    type: reporter,
    returns: bitmap,
    arguments: [ { name: image, type: bitmap }, { name: width, type: number }, { name: height, type: number } ],
    description: "Reports a new image that is *image* scaled to the given *width* and *height*"
  },
  {
    name: width,
    type: reporter,
    returns: number,
    arguments: [ { name: image, type: bitmap } ],
    description: "Reports the width of the given *image*"
  }
]
